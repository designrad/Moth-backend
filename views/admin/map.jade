doctype
html
    head
        title #{title}
        link(rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" integrity="sha512-07I2e+7D8p6he1SIM+1twR5TIrhUQn9+I6yjqD53JQjFiMf8EtC93ty0/5vJTZGF8aAocvHYNEDJajGdNx1IsQ==" crossorigin="")
        link(rel="stylesheet", href="/assets/css/map.css")
    body
        #mapid
    script(src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js" integrity="sha512-A7vV8IFfih/D732iSSKi20u/ooOfj/AGehOKq0f4vLT1Zr2Y+RX7C+w8A1gaSasGtRUZpF/NZgzSAu4/Gc41Lg==" crossorigin="")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.0.5/leaflet.markercluster-src.js")
    script(src="https://cdn.jsdelivr.net/momentjs/2.18.1/moment.min.js")
    script.
        document.getElementById('mapid').style.height = window.innerHeight + 'px';
        const images = JSON.parse('!{images}'.replace(/\n/ig, '\\\\n'));
        var lat, lng;
        function renderMap() {
            var mymap = L.map('mapid').setView([lat, lng], 13);
            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(mymap);
            ///
            var markers = L.markerClusterGroup({
                spiderfyOnMaxZoom: true,
                showCoverageOnHover: true,
                zoomToBoundsOnClick: true,
                iconCreateFunction: function(cluster) {
                    return L.divIcon({ html: '<b>' + cluster.getChildCount() + '</b>' });
                }
            });
            ///
            images.forEach(function (image) {
                var myIcon = L.icon({
                    iconUrl: image.identification === 'correct' ? 'assets/img/marker-icon-green.png' : 'assets/img/marker-icon-gray.png',
                    iconSize: [25, 41],
                    //iconAnchor: [22, 94],
                    //popupAnchor: [-3, -76],
                    //shadowUrl: '',
                    //shadowSize: [68, 95],
                    //shadowAnchor: [22, 94]
            });
                //const className = image.identification === 'correct' ? 'marker-icon-approved' : 'marker-icon-pending';
                //var myIcon = L.divIcon({className});
                const marker = L.marker([image.latitude, image.longitude], {icon: myIcon });
                //marker.bindPopup("You are there! Your ID is").openPopup();
                if (image.identification === 'correct') {
                    marker.bindPopup("<div><image src='/image/" + image.name + "' style='width:100%; height:100%'><div class='subheader-1'>" + moment(image.date).format('DD.MM.YYYY HH:mm:ss') + "</div><div class='subheader-2'>" + image.latitude + ", " + image.longitude + "</div></div>");
                } else {
                    marker.bindPopup("<div><div class='subheader-1 pending'>Unverified. Waiting for identification.</div><div class='subheader-1'>" + moment(image.date).format('DD.MM.YYYY HH:mm:ss') + "</div><div class='subheader-2'>" + image.latitude + ", " + image.longitude + "</div></div>");
                }
                markers.addLayer(marker);
            });
            mymap.addLayer(markers);
        }
        function positionSuccess(position) {
            lat = position.coords.latitude;
            lng = position.coords.longitude;
            renderMap();
        }
        function positionError(error) {
            console.log(error);
            lat = images[0].latitude;
            lng = images[0].longitude;
            renderMap();
        }
        navigator.geolocation.getCurrentPosition(positionSuccess, positionError, { enableHighAccuracy: true });
